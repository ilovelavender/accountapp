/*
 * This file is generated by jOOQ.
 */
package ru.olegr.accountapp.model.generated.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import ru.olegr.accountapp.model.generated.tables.Transactions;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionsRecord extends UpdatableRecordImpl<TransactionsRecord> implements Record6<Integer, String, LocalDateTime, Integer, Integer, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.transactions.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.transactions.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.transactions.txn_id</code>.
     */
    public void setTxnId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.transactions.txn_id</code>.
     */
    public String getTxnId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.transactions.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.transactions.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.transactions.from_account_id</code>.
     */
    public void setFromAccountId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.transactions.from_account_id</code>.
     */
    public Integer getFromAccountId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.transactions.to_account_id</code>.
     */
    public void setToAccountId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.transactions.to_account_id</code>.
     */
    public Integer getToAccountId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.transactions.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.transactions.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, LocalDateTime, Integer, Integer, BigDecimal> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, LocalDateTime, Integer, Integer, BigDecimal> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Transactions.TRANSACTIONS.ID;
    }

    @Override
    public Field<String> field2() {
        return Transactions.TRANSACTIONS.TXN_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Transactions.TRANSACTIONS.CREATED_AT;
    }

    @Override
    public Field<Integer> field4() {
        return Transactions.TRANSACTIONS.FROM_ACCOUNT_ID;
    }

    @Override
    public Field<Integer> field5() {
        return Transactions.TRANSACTIONS.TO_ACCOUNT_ID;
    }

    @Override
    public Field<BigDecimal> field6() {
        return Transactions.TRANSACTIONS.AMOUNT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTxnId();
    }

    @Override
    public LocalDateTime component3() {
        return getCreatedAt();
    }

    @Override
    public Integer component4() {
        return getFromAccountId();
    }

    @Override
    public Integer component5() {
        return getToAccountId();
    }

    @Override
    public BigDecimal component6() {
        return getAmount();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTxnId();
    }

    @Override
    public LocalDateTime value3() {
        return getCreatedAt();
    }

    @Override
    public Integer value4() {
        return getFromAccountId();
    }

    @Override
    public Integer value5() {
        return getToAccountId();
    }

    @Override
    public BigDecimal value6() {
        return getAmount();
    }

    @Override
    public TransactionsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TransactionsRecord value2(String value) {
        setTxnId(value);
        return this;
    }

    @Override
    public TransactionsRecord value3(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public TransactionsRecord value4(Integer value) {
        setFromAccountId(value);
        return this;
    }

    @Override
    public TransactionsRecord value5(Integer value) {
        setToAccountId(value);
        return this;
    }

    @Override
    public TransactionsRecord value6(BigDecimal value) {
        setAmount(value);
        return this;
    }

    @Override
    public TransactionsRecord values(Integer value1, String value2, LocalDateTime value3, Integer value4, Integer value5, BigDecimal value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionsRecord
     */
    public TransactionsRecord() {
        super(Transactions.TRANSACTIONS);
    }

    /**
     * Create a detached, initialised TransactionsRecord
     */
    public TransactionsRecord(Integer id, String txnId, LocalDateTime createdAt, Integer fromAccountId, Integer toAccountId, BigDecimal amount) {
        super(Transactions.TRANSACTIONS);

        setId(id);
        setTxnId(txnId);
        setCreatedAt(createdAt);
        setFromAccountId(fromAccountId);
        setToAccountId(toAccountId);
        setAmount(amount);
    }
}
